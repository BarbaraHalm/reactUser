{"ast":null,"code":"var _jsxFileName = \"/Users/barbaraacquah/Desktop/React /react-user/src/components/ProtectedRoute.js\";\nimport React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute(_ref) {\n  let {\n    children,\n    authUser\n  } = _ref;\n  if (!authUser) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/loginpage\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 27\n  }, this);\n  return children;\n}\n\n_c = ProtectedRoute;\n\nconst mapStateToProps = state => {\n  return {\n    authUser: state.authUser.newloginUser\n  };\n};\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","connect","useSelector","Navigate","ProtectedRoute","children","authUser","mapStateToProps","state","newloginUser"],"sources":["/Users/barbaraacquah/Desktop/React /react-user/src/components/ProtectedRoute.js"],"sourcesContent":["import React  from \"react\";\nimport {connect,useSelector} from \"react-redux\";\nimport {Navigate} from \"react-router-dom\"\n\n\n\nfunction ProtectedRoute({children,authUser}) {\n    \n    if (!authUser) return <Navigate to=\"/loginpage\"replace={true} />\n    return children;\n}\nconst mapStateToProps =(state)=>{\n    return{\n        authUser: state.authUser.newloginUser,\n    }\n}\nexport default connect(mapStateToProps)(ProtectedRoute);"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAAQC,OAAR,EAAgBC,WAAhB,QAAkC,aAAlC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;;AAIA,SAASC,cAAT,OAA6C;EAAA,IAArB;IAACC,QAAD;IAAUC;EAAV,CAAqB;EAEzC,IAAI,CAACA,QAAL,EAAe,oBAAO,QAAC,QAAD;IAAU,EAAE,EAAC,YAAb;IAAyB,OAAO,EAAE;EAAlC;IAAA;IAAA;IAAA;EAAA,QAAP;EACf,OAAOD,QAAP;AACH;;KAJQD,c;;AAKT,MAAMG,eAAe,GAAGC,KAAD,IAAS;EAC5B,OAAM;IACFF,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeG;EADvB,CAAN;AAGH,CAJD;;AAKA,eAAeR,OAAO,CAACM,eAAD,CAAP,CAAyBH,cAAzB,CAAf"},"metadata":{},"sourceType":"module"}